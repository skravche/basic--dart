/*
Замыкание (closure) представляет объект функции, который запоминает свое лексическое окружение даже в том случае, когда она выполняет вне своей области видимости.
Технически замыкание включает три компонента:
    внешняя функция, которая определяет некоторую область видимости и в которой определены некоторые переменные и параметры - лексическое окружение
    переменные и параметры (лексическое окружение), которые определены во внешней функции
    вложенная функция, которая использует переменные и параметры внешней функции
*/
/*
Function outer() {
  // внешняя функция
  var n = 11; // некоторая переменная - лексическое окружение
  Function inner() {
    // вложенная функция
    // действия с переменной n
    n++;
    print(n);
  }

  return inner;
}

void main(List<String> args) {
  print(outer());

  Function fn = outer();
  fn();
}
*/

// another example
Function multiply(int n) {
  return (int m) => n * m;
}

void main() {
  Function func = multiply(5);
  int result1 = func(6); // 30
  print(result1); // 30

  int result2 = func(5); // 25
  print(result2); // 25
}
